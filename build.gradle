import net.minecraftforge.gradle.common.util.ModConfig

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven { url "https://dist.creeper.host/Sponge/maven" }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id 'java'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

apply from: 'https://raw.githubusercontent.com/MinecraftModDevelopment/Gradle-Collection/master/generic/markdown-git-changelog.gradle'
apply from: "https://raw.githubusercontent.com/UnRealDinnerbone/GradleHelpers/master/version.gradle"

def theMinecraft_version = findLocalProperty("minecraft_version")
def theForge_Version = findLocalProperty("forge_version")
def theMappings_Version = findLocalProperty("mcp_mappings")

version = getVersionNumber()

group = 'com.unrealdinnerbone.javad'
archivesBaseName = 'JAVD'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8



minecraft {
    mappings channel: 'snapshot', version: "${theMappings_Version}"

    accessTransformer = this.getRootProject().file("src/main/resources/META-INF/accesstransformer.cfg")
    ModConfig projectMod = new ModConfig(project, project.getName());
    projectMod.source(project.sourceSets.main)

    runs {
        client {
            args '--mixin.config', 'javd.mixins.json'
            workingDirectory project.file('client')
            mods.add(projectMod)
        }
        server {
            args '--mixin.config', 'javd.mixins.json'
            workingDirectory project.file('server')
            mods.add(projectMod)
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${theMinecraft_version}-${theForge_Version}"
}

String findLocalProperty(String name) {
    return this.getRootProject().property(name)
}

jar {
    manifest {
        attributes([
                "MixinConfigs": "javd.mixins.json",
                "Specification-Title": "${archivesBaseName}",
                "Specification-Vendor": "UnRealDinnerbone",
                "Specification-Version": "${theMinecraft_version}",
                "Implementation-Title":  "${archivesBaseName}",
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"UnRealDinnerbone",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

curseforge {
    if (project.hasProperty('unreal_curse_api_key')){
        apiKey = project.getProperty('unreal_curse_api_key')
    }
    project {
        id = project.property("curseforge_id")
        changelog = getGitChangelog
        changelogType = 'markdown'
        releaseType = project.property("type")
        addGameVersion minecraft_version
        addGameVersion 'Forge'
    }
}

mixin {
    add sourceSets.main, "javd.refmap.json"
}